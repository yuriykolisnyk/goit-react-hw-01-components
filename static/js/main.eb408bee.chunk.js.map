{"version":3,"sources":["componets/task1SocialProfile/Profile.module.css","componets/task4TransactionHistory/TransactionHistory.module.css","componets/task3FriendList/FriendList.module.css","componets/task2Statistics/Statistics.module.css","componets/Container/Container.module.css","componets/task1SocialProfile/Profile.js","componets/task2Statistics/Statistics.js","componets/task3FriendList/FriendListItem.js","componets/task3FriendList/FriendList.js","componets/task4TransactionHistory/TransactionHistory.js","componets/Container/Container.js","App.js","index.js"],"names":["module","exports","Profile","avatar","username","tag","location","stats","className","s","profile","description","src","alt","name","items","label","quantity","followers","views","likes","randColor","r","Math","floor","random","g","b","toString","Statistics","title","statistics","statList","map","id","percentage","item","style","backgroundColor","FriendListItem","isOnline","online","offline","width","FriendList","friends","friendList","protoTypes","PropTypes","arrayOf","shape","number","isRequired","TransactionHistory","transactionHistory","head","type","amount","currency","tbody","itemsBody","Container","children","container","App","user","data","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb408bee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2dfMA\",\"description\":\"Profile_description__1O4oC\",\"avatar\":\"Profile_avatar__2kKHk\",\"name\":\"Profile_name__3lpwD\",\"tag\":\"Profile_tag__2snzP\",\"location\":\"Profile_location__duo9m\",\"stats\":\"Profile_stats__j2xHi\",\"items\":\"Profile_items__2uPjl\",\"quantity\":\"Profile_quantity__n2b-9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__3cDVP\",\"head\":\"TransactionHistory_head__3gEPi\",\"title\":\"TransactionHistory_title__1vyAp\",\"tbody\":\"TransactionHistory_tbody__SQXd3\",\"itemsBody\":\"TransactionHistory_itemsBody__1_HRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__3WbDR\",\"item\":\"FriendList_item__u9ppx\",\"status\":\"FriendList_status__3PhEt\",\"online\":\"FriendList_online__3Pz4s FriendList_status__3PhEt\",\"offline\":\"FriendList_offline__1EYZp FriendList_status__3PhEt\",\"avatar\":\"FriendList_avatar__17woF\",\"name\":\"FriendList_name__1AL2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1GQBF\",\"title\":\"Statistics_title__2328c\",\"statList\":\"Statistics_statList__kv2xz\",\"item\":\"Statistics_item__1vgG3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__tfalV\"};","import PropTypes from 'prop-types';\r\nimport s from './Profile.module.css';\r\n\r\nconst Profile = ({ avatar, username, tag, location, stats }) => {\r\n  return (\r\n    <div className={s.profile}>\r\n      <div className={s.description}>\r\n        <img src={avatar} alt=\"User avatar\" className={s.avatar} />\r\n        <p className={s.name}>{username}</p>\r\n        <p className={s.tag}>@{tag}</p>\r\n        <p className={s.location}>{location}</p>\r\n      </div>\r\n\r\n      <ul className={s.stats}>\r\n        <li className={s.items}>\r\n          <span className={s.label}>Followers</span>\r\n          <span className={s.quantity}>{stats.followers}</span>\r\n        </li>\r\n        <li className={s.items}>\r\n          <span className={s.label}>Views</span>\r\n          <span className={s.quantity}>{stats.views}</span>\r\n        </li>\r\n        <li className={s.items}>\r\n          <span className={s.label}>Likes</span>\r\n          <span className={s.quantity}>{stats.likes}</span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Statistics.module.css';\r\n\r\nfunction randColor() {\r\n  const r = Math.floor(Math.random() * 256);\r\n  const g = Math.floor(Math.random() * 256);\r\n  const b = Math.floor(Math.random() * 256);\r\n  const color = '#' + r.toString(16) + g.toString(16) + b.toString(16);\r\n  return color;\r\n}\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n  return (\r\n    <section className={s.statistics}>\r\n      {title && <h2 className={s.title}>{title}</h2>}\r\n\r\n      <ul className={s.statList}>\r\n        {stats.map(({ id, label, percentage }) => (\r\n          <li\r\n            className={s.item}\r\n            key={id}\r\n            style={{ backgroundColor: randColor() }}\r\n          >\r\n            <span className={s.label}>{label}</span>\r\n            <span className={s.percentage}>{percentage}%</span>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendListItem = ({ avatar, name, isOnline }) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <span className={isOnline ? s.online : s.offline}>{isOnline}</span>\r\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\r\n      <p className={s.name}>{name}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nFriendListItem.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isOnline: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default FriendListItem;\r\n","import PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\nimport s from './FriendList.module.css';\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={s.friendList}>\r\n      {friends.map(({ id, avatar, name, isOnline }) => (\r\n        <li key={id}>\r\n          <FriendListItem avatar={avatar} name={name} isOnline={isOnline} />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.protoTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import PropTypes from 'prop-types';\r\nimport s from './TransactionHistory.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={s.transactionHistory}>\r\n      <thead>\r\n        <tr className={s.head}>\r\n          <th className={s.title}>Type</th>\r\n          <th className={s.title}>Amount</th>\r\n          <th className={s.title}>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map(({ id, type, amount, currency }) => (\r\n          <tr className={s.tbody} key={id}>\r\n            <td className={s.itemsBody}>{type}</td>\r\n            <td className={s.itemsBody}>{amount}</td>\r\n            <td className={s.itemsBody}>{currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import PropTypes from 'prop-types';\r\nimport s from './Container.module.css';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import Profile from './componets/task1SocialProfile/Profile';\r\nimport user from './componets/task1SocialProfile/user.json';\r\n\r\nimport Statistics from './componets/task2Statistics/Statistics';\r\nimport data from './componets/task2Statistics/data.json';\r\n\r\nimport FriendList from './componets/task3FriendList/FriendList';\r\nimport friends from './componets/task3FriendList/friends.json';\r\n\r\nimport TransactionHistory from './componets/task4TransactionHistory/TransactionHistory';\r\nimport transactions from './componets/task4TransactionHistory/transactions.json';\r\n\r\nimport Container from './componets/Container/Container';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container>\r\n      <Profile\r\n        avatar={user.avatar}\r\n        username={user.username}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        stats={user.stats}\r\n      />\r\n      <Statistics title=\"Upload stats\" stats={data} />\r\n      <Statistics stats={data} />\r\n      <FriendList friends={friends} />\r\n      <TransactionHistory items={transactions} />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}